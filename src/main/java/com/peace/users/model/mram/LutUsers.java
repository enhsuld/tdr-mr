package com.peace.users.model.mram;
// Generated Nov 18, 2015 5:50:18 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.peace.users.model.Role;

/**
 * LutUsers generated by hbm2java
 */
@Entity
@Table(name = "LUT_USERS")
public class LutUsers implements java.io.Serializable {

	private Long id;
	private SubLegalpersons subLegalpersons;
	private String famnamemon;
	private String famnameeng;
	private String givnamemon;
	private String givnameeng;
	private String avatar;
	private String position;
	private Integer positionid=0;
	private String mobile;
	private String email;
	private Long divisionid;
	private Long roleid;
	private Long groupid;
	private String lpreg;
	private Boolean isactive;
	private String username;
	private String userpass;
	private Integer ispublic;
	private Integer stepid;
	private List<LnkOffRole> lnkOffRoles;
	//private LutRole role;
	
	private Set<DataTezuMail> dataTezuMail = new HashSet<DataTezuMail>(0);
	private Set<AnnualRegistration> annualRegistration = new HashSet<AnnualRegistration>(0);
	private Set<SubApprovals> subApprovalses = new HashSet<SubApprovals>(0);

	public LutUsers() {
	}

	public LutUsers(Long id, String famnamemon, String famnameeng, String givnamemon, String givnameeng,
			String position, String mobile, Boolean isactive) {
		this.id = id;
		this.famnamemon = famnamemon;
		this.famnameeng = famnameeng;
		this.givnamemon = givnamemon;
		this.givnameeng = givnameeng;
		this.position = position;
		this.mobile = mobile;
		this.isactive = isactive;
	}

	public LutUsers(Long id, SubLegalpersons subLegalpersons, String famnamemon, String famnameeng,
			String givnamemon, String givnameeng, String position, String mobile, String email, Long divisionid,
			Long roleid, Boolean isactive, String username, String userpass, 
			Set<SubApprovals> subApprovalses) {
		this.id = id;
		this.subLegalpersons = subLegalpersons;
		this.famnamemon = famnamemon;
		this.famnameeng = famnameeng;
		this.givnamemon = givnamemon;
		this.givnameeng = givnameeng;
		this.position = position;
		this.mobile = mobile;
		this.email = email;
		this.divisionid = divisionid;
		this.roleid = roleid;
		this.isactive = isactive;
		this.username = username;
		this.userpass = userpass;
		this.subApprovalses = subApprovalses;
	}

	@Id
	@SequenceGenerator(name="LUT_OFFICERS_SEQ", sequenceName="LUT_OFFICERS_SEQ", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE ,generator="LUT_OFFICERS_SEQ")
	@Column(name = "OFFICERID", unique = true, nullable = false)
	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}
	
		
	@Column(name = "LP_REG", nullable = false, length = 20)
	public String getLpreg() {
		return lpreg;
	}



	public void setLpreg(String lpreg) {
		this.lpreg = lpreg;
	}

	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "LP_REG", referencedColumnName="LP_REG", nullable=false,insertable=false,updatable=false)
	@JsonBackReference
	public SubLegalpersons getSubLegalpersons() {
		return this.subLegalpersons;
	}

	public void setSubLegalpersons(SubLegalpersons subLegalpersons) {
		this.subLegalpersons = subLegalpersons;
	}

	
	
	@Column(name = "AVATAR")
	public String getAvatar() {
		return avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@Column(name = "FAMNAMEMON", length = 100)
	public String getFamnamemon() {
		return this.famnamemon;
	}

	public void setFamnamemon(String famnamemon) {
		this.famnamemon = famnamemon;
	}

	@Column(name = "FAMNAMEENG",  length = 100)
	public String getFamnameeng() {
		return this.famnameeng;
	}

	public void setFamnameeng(String famnameeng) {
		this.famnameeng = famnameeng;
	}

	@Column(name = "GIVNAMEMON", length = 100)
	public String getGivnamemon() {
		return this.givnamemon;
	}

	public void setGivnamemon(String givnamemon) {
		this.givnamemon = givnamemon;
	}

	@Column(name = "GIVNAMEENG",  length = 100)
	public String getGivnameeng() {
		return this.givnameeng;
	}

	public void setGivnameeng(String givnameeng) {
		this.givnameeng = givnameeng;
	}

	@Column(name = "POSITION")
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}

	@Column(name = "MOBILE", length = 40)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "EMAIL", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "DIVISIONID", precision = 10, scale = 0)
	public Long getDivisionid() {
		return this.divisionid;
	}

	public void setDivisionid(Long divisionid) {
		this.divisionid = divisionid;
	}

	
	
	@Column(name = "GROUPID", precision = 10, scale = 0)
	public Long getGroupid() {
		return groupid;
	}

	public void setGroupid(Long groupid) {
		this.groupid = groupid;
	}

	@Column(name = "ROLEID", precision = 10, scale = 0)
	public Long getRoleid() {
		return this.roleid;
	}

	public void setRoleid(Long roleid) {
		this.roleid = roleid;
	}

	@Column(name = "ISACTIVE", nullable = false, length = 10)
	public Boolean getIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Column(name = "USERNAME")
	public String getUsername() {
		return this.username;
	}



	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "USERPASS")
	public String getUserpass() {
		return this.userpass;
	}

	public void setUserpass(String userpass) {
		this.userpass = userpass;
	}
	
	@Column(name = "POSITIONID")
	public Integer getPositionid() {
		return positionid;
	}

	public void setPositionid(Integer positionid) {
		this.positionid = positionid;
	}

	@Column(name = "ISPUBLIC")
	public Integer getIspublic() {
		return ispublic;
	}

	public void setIspublic(Integer ispublic) {
		this.ispublic = ispublic;
	}

	/*@OneToOne(fetch = FetchType.LAZY, cascade=CascadeType.ALL,orphanRemoval=true)
	@JoinTable(name="LNK_OFF_ROLE",
		joinColumns = {@JoinColumn(name="USER_ID", referencedColumnName="OFFICERID")},
		inverseJoinColumns = {@JoinColumn(name="ROLE_ID", referencedColumnName="RoleID")}
	)
	@OrderBy("ID")
	@JsonBackReference
	public LutRole getRole() {
		return role;
	}

	public void setRole(LutRole role) {
		this.role = role;
	}*/
	

	@OneToMany(mappedBy="lutUsers")
	@JsonBackReference
	public List<LnkOffRole> getLnkOffRoles() {
		return lnkOffRoles;
	}

	public void setLnkOffRoles(List<LnkOffRole> lnkOffRoles) {
		this.lnkOffRoles = lnkOffRoles;
	}


	
	
	
	@Column(name = "STEPID")
	public Integer getStepid() {
		return stepid;
	}

	public void setStepid(Integer stepid) {
		this.stepid = stepid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lutUsers",cascade=CascadeType.ALL,orphanRemoval=true)
	@JsonBackReference
	@OrderBy("ID")
	public Set<DataTezuMail> getDataTezuMail() {
		return dataTezuMail;
	}

	public void setDataTezuMail(Set<DataTezuMail> dataTezuMail) {
		this.dataTezuMail = dataTezuMail;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lutUsers",cascade=CascadeType.ALL,orphanRemoval=true)
	@JsonBackReference
	@OrderBy("ID")
	public Set<AnnualRegistration> getAnnualRegistration() {
		return annualRegistration;
	}

	public void setAnnualRegistration(Set<AnnualRegistration> annualRegistration) {
		this.annualRegistration = annualRegistration;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "lutUsers",cascade=CascadeType.ALL,orphanRemoval=true)
	@JsonBackReference
	@OrderBy("ID")
	public Set<SubApprovals> getSubApprovalses() {
		return this.subApprovalses;
	}

	public void setSubApprovalses(Set<SubApprovals> subApprovalses) {
		this.subApprovalses = subApprovalses;
	}

}
